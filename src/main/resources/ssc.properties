# provider for the account that SSC is running under, must be able to write to S3 bucket.
ssc.provider.class.name=com.amazonaws.auth.ClasspathPropertiesFileCredentialsProvider

# s3 storage information.
ssc.s3.bucket.name=eqt.state.capture.bucket
ssc.s3.bucket.region=US_Standard

# Set if you are using ZookeeperMultiAccountManager Distributed Management
ssc.dist.zookeeper.connect.string=localhost:2181

## account management info

# APICollectors to run
ssc.process.api.collectors=com.eqt.ssc.collector.EC2Collector,com.eqt.ssc.collector.S3Collector

# class to load for calling to retrieve accounts (AwsCreds) from.
#ssc.account.manager.class.name=com.eqt.ssc.accounts.SameCredAccountManager
ssc.account.manager.class.name=com.eqt.ssc.accounts.ZookeeperMultiAccountManager

# this lets you wrap the SSCFixedProvider in another one, for example an STSProvider. Provider must take
# single constructor arg of another provider.
#ssc.account.manager.provider=

# how often to hit AWS api's for state change
ssc.account.check.interval.seconds=300